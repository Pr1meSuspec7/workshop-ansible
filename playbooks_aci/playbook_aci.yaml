---
- name: "CONFIGURATION ACI"
  hosts: apic
  connection: local
  gather_facts: false
  vars:
    # yaml macro
    apic_info: &apic_info
      host: "{{ inventory_hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      validate_certs: false
  vars_files:
    - aci_vars.yaml

  tasks:


    - name: Create tenant
      cisco.aci.aci_tenant:
        <<: *apic_info
        tenant: "{{ item.tenant }}"
        description: "{{ item.descr | default('Deployed by Ansible') }}"
      loop: "{{ TENANTs }}"
      loop_control:
        label: "{{ item.tenant }}"
      tags:
        - tenant


    - name: Create vrf
      cisco.aci.aci_vrf:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        vrf: "{{ item.1.vrf }}"
      when: item.1.vrf is defined
      loop: "{{ query('subelements', TENANTs, 'VRFs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.vrf | default('Missing vrf') }}"
      tags:
        - vrf


    - name: Create bridge domain
      cisco.aci.aci_bd:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        vrf: "{{ item.1.vrf }}"
        bd: "{{ item.1.bd }}"
        arp_flooding: "{{ item.1.arp_flooding | default(false) }}"
        l2_unknown_unicast: "{{ item.1.l2_unknown_unicast | default('proxy') }}"
        enable_routing: "{{ item.1.enable_routing | default(true)}}"
      when: item.1.bd is defined
      loop: "{{ query('subelements', TENANTs, 'BDs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.bd | default('Missing bridge domain') }}"
      tags:
        - bd


    - name: Create a subnet
      cisco.aci.aci_bd_subnet:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        bd: "{{ item.1.bd }}"
        gateway: "{{ item.1.gw }}"
        mask: "{{ item.1.mask }}"
        preferred: "{{ item.1.preferred | default(false) }}"
        scope: "{{ item.1.scope | default(['private']) }}"
      when: item.1.gw is defined
      loop: "{{ query('subelements', TENANTs, 'BDs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.bd | default('No bd') }} -> {{ item.1.gw | default('No subnet') }}/{{ item.1.mask | default('mask') }}"
      tags:
        - subnet


    - name: Create application profile
      cisco.aci.aci_ap:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        ap: "{{ item.1.ap }}"
      when: item.1.ap is defined
      loop: "{{ query('subelements', TENANTs, 'APs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.ap | default('Missing application profile') }}"
      tags:
        - ap


    - name: Create epg
      cisco.aci.aci_epg:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        ap: "{{ item.1.ap }}"
        bd: "{{ item.1.bd }}"
        epg: "{{ item.1.epg }}"
      when: item.1.epg is defined
      loop: "{{ query('subelements', TENANTs, 'EPGs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.epg | default('Missing epg') }}"
      tags:
        - epg


    - name: Add a new physical domain to EPG binding
      cisco.aci.aci_epg_to_domain:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        ap: "{{ item.1.ap }}"
        epg: "{{ item.1.epg }}"
        domain: "{{ item.1.domain }}"
        domain_type: "{{ item.1.domain_type | default('phys') }}"
      when: item.1.domain is defined
      loop: "{{ query('subelements', TENANTs, 'EPGs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.epg | default('Missing EPG') }} -> {{ item.1.domain | default('Missing domain') }}"
      tags:
        - domain_to_epg


    - name: Add a new contract
      cisco.aci.aci_contract:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        contract: "{{ item.1.contract }}"
        scope: "{{ item.1.scope }}"
      when: item.1.contract is defined
      loop: "{{ query('subelements', TENANTs, 'CONTRACTs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.contract | default('Missing contract') }}"
      tags:
        - contract


    - name: Add a new contract subject
      cisco.aci.aci_contract_subject:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        contract: "{{ item.1.contract }}"
        subject: "{{ item.1.sbj }}"
        reverse_filter: "{{ item.1.reverse | default(true) }}"
        apply_both_direction: "{{ item.1.direction | default('both') }}"
      when: item.1.contract is defined
      loop: "{{ query('subelements', TENANTs, 'CONTRACTs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.contract | default('Missing contract') }} -> {{ item.1.sbj | default('Missing subject') }}"
      tags:
        - contract
        - sbj


    - name: Add a new filter
      cisco.aci.aci_filter:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        filter: "{{ item.1.filter }}"
      when: item.1.filter is defined
      loop: "{{ query('subelements', TENANTs, 'CONTRACTs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.filter | default('Missing filter') }}"
      tags:
        - contract
        - filter


    - name: Add a filter entry
      cisco.aci.aci_filter_entry:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        filter: "{{ item.1.filter }}"
        entry: "{{ item.1.entry }}"
        ether_type: "{{ item.1.ether_type }}"
        ip_protocol: "{{ item.1.ip_protocol }}"
        source_port_start: "{{ item.1.source_port_start | default(omit) }}"
        source_port_end: "{{ item.1.source_port_end | default(omit) }}"
        dst_port_start: "{{ item.1.dst_port_start }}"
        dst_port_end: "{{ item.1.dst_port_end }}"
      when: item.1.filter is defined
      loop: "{{ query('subelements', TENANTs, 'CONTRACTs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.filter | default('Missing filter') }} -> {{ item.1.entry | default('Missing entry') }}"
      tags:
        - contract
        - entry_filter


    - name: Add a new contract subject to filer binding
      cisco.aci.aci_contract_subject_to_filter:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        contract: "{{ item.1.contract }}"
        subject: "{{ item.1.sbj }}"
        filter: "{{ item.1.filter }}"
        action: "{{ item.1.action }}"
        directives: log
      when: item.1.contract is defined
      loop: "{{ query('subelements', TENANTs, 'CONTRACTs', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.contract | default('Missing contract') }} -> {{ item.1.action | default('Missing action') }}"
      tags:
        - contract
        - filter_bind


    - name: Add a new contract to EPG
      cisco.aci.aci_epg_to_contract:
        <<: *apic_info
        tenant: "{{ item.0.tenant }}"
        ap: "{{ item.1.ap }}"
        epg: "{{ item.1.epg }}"
        contract: "{{ item.1.contract }}"
        contract_type: "{{ item.1.type }}"
      when: item.1.type is defined
      loop: "{{ query('subelements', TENANTs, 'CONTRACTtoEPG', {'skip_missing': True}) }}"
      loop_control:
        label: "{{ item.1.epg | default('Missing epg') }} -> {{ item.1.contract | default('Missing contract') }} -> {{ item.1.type | default('Missing type') }}"
      tags:
        - contract_to_epg
